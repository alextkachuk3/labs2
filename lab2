#include <iostream>
#include <string>
#include <cmath>
using namespace std;

template<typename T>
class List
{
public:
	List();
	~List();

	void push_back(T data);
	int GetSize() { return Size; };

	T& operator[](const int index);

private:

	template<typename T>
	class Node
	{
	public:
		Node* pNext;
		T data;
		Node(T data = T(), Node* pNext = nullptr)
		{
			this->data = data;
			this->pNext = pNext;
		}
	};
	int Size;
	Node<T> *head;
};

template<typename T>
List<T>::List()
{
	Size = 0;
	head = nullptr;
}

template<typename T>
List<T>::~List()
{

}

template<typename T>
void List<T>::push_back(T data)
{
	if (head == nullptr)
	{
		head = new Node<T>(data);
	}
	else
	{
		Node<T>* current = this->head;
		while (current->pNext != nullptr)
		{
			current = current->pNext;
		}
		current->pNext = new Node<T>(data);
	}
	Size++;
}

template<typename T>
T& List<T>::operator[](const int index)
{
	int counter = 0;
	Node<T>* current = this->head;
	while (current != nullptr)
	{
		if (counter == index)
		{
			return current->data;
		}
		current = current->pNext;
		counter++;
	}
}

int fact(int x)
{
	double result = 1;
	for (int i = 1; i <= x; i++)
	{
		result *= i;
	}
	return result;
}

int binomial_coeff(int n, int k)
{
	return fact(n) / ((fact(k) * fact(n - k)));
}

int main()
{
	unsigned n;
	int x;
	setlocale(LC_ALL, "ru");
	List<int> lst;
	/*lst.push_back(5);
	lst.push_back(23);
	lst.push_back(77);

	cout << lst[0] << endl;*/

	cout << "Разложение многочлена (ax+b)^n"<<endl<<"Введите n (n>=0):";
	cin >> n;
	if (n < 0)
	{
		cout << "n не отрицательное число";
	}
	cout << "Введите x:";
	cin >> x;

	for (int k = 0; k < (n + 1); k++)
	{
		lst.push_back(binomial_coeff(n, k) * pow(x, (n - k)));
	}

	//cout << binomial_coeff(7, 4);


	cout << "Коэфициенты полинома:" << endl;
	for (int k = 0; k < (n + 1); k++)
	{
		cout<<lst[k]<<endl;
	}

	cout << "Разложение:" << endl;
	if (n == 0)
	{
		cout << "1";
	}
	else
	{
		for (int k = 0; k <= n; k++)
		{
			if (lst[k] != 1)
			{
				cout << lst[k];
			}
			if (k != n)
			{
				cout << "a";
				if ((n - k) != 1)
				{
					cout << "^" << (n - k);
				}
			}
			if (k != 0)
			{
				cout << "b";
				if (k != 1)
				{
					cout << "^" << (k);
				}
			}
			if (k != n)
			{
				cout << "+";
			}
		}
	}
	return 0;
}


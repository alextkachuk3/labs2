#include <iostream>
#include <string>
#include <cmath>
using namespace std;

template<typename T>
class List
{
public:
	List();
	~List();

	void pop_front();
	void push_back(T data);
	void clear();
	int GetSize() const { return Size; }; 
	T& operator[](const int index);

private:

	template<typename T>
	class Node
	{
	public:
		Node* pNext;
		T data;
		Node(T data = T(), Node* pNext = nullptr)
		{
			this->data = data;
			this->pNext = pNext;
		}
	};
	int Size;
	Node<T>* head;
};

template<typename T>
List<T>::List()
{
	Size = 0;
	head = nullptr;
}

template<typename T>
List<T>::~List()
{
	clear();
}

template<typename T>
void List<T>::pop_front()
{
	Node<T>* temp = head;
	head = head->pNext;
	delete temp;
	Size--;
}

template<typename T>
void List<T>::push_back(T data)
{
	if (head == nullptr)
	{
		head = new Node<T>(data);
	}
	else
	{
		Node<T>* current = this->head;
		while (current->pNext != nullptr)
		{
			current = current->pNext;
		}
		current->pNext = new Node<T>(data);
	}
	Size++;
}

template<typename T>
void List<T>::clear()
{
	while (Size)
	{
		pop_front();
	}
}

template<typename T>
T& List<T>::operator[](const int index)
{
	int counter = 0;
	Node<T>* current = this->head;
	while (current != nullptr)
	{
		if (counter == index)
		{
			return current->data;
		}
		current = current->pNext;
		counter++;
	}
}

unsigned long long binomial_coef(List<unsigned long long>& l, const int& n, const int& k)
{
	if (k)
	{
		return l[k - 1] * (n - k + 1) / k;
	}
	else
	{
		return 1;
	}
}

int main()
{
	setlocale(LC_ALL, "ru");
	List<unsigned long long> lst;
	int n, a, b;
	cout << "Разложение многочлена (ax+b)^n" << endl << "Введите n (n>=0):";
	cin >> n;
	if (n < 0)
	{
		cout << "n не отрицательное число";
	}
	cout << "Введите a:";
	cin >> a;

	cout << "Введите b:";
	cin >> b;

	for (int k = 0; k < (n/2)+1; k++)
	{
		lst.push_back(binomial_coef(lst, n, k));
	}

	if (n % 2)
	{
		for (int i = n / 2; i >= 0; i--)
		{
			lst.push_back(lst[i]);
		}
	}
	else
	{
		for (int i = n / 2 - 1; i >= 0; i--)
		{
			lst.push_back(lst[i]);
		}
	}

	for (int i = 0; i <= n; i++)
	{
		lst[i] *= pow(a, n - i) * pow(b, i);
	}

	cout << "Коэфициенты полинома:" << endl;
	for (int k = 0; k < (n + 1); k++)
	{
		cout << lst[k] << " ";
	}


	cout << endl << "Разложение:" << endl;
	if (n == 0)
	{
		cout << "1";
	}
	else
	{
		for (int i = 0; i <= n; i++)
		{
			cout << lst[i];
			if (i != n)
				cout << "x^" << n - i << "+";
		}
	}
	return 0;
}
